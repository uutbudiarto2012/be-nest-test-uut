// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

enum Role {
  admin
  customer
  seller
}

model User {
  id         String   @id @unique @default(uuid())
  email      String   @unique @db.VarChar(100)
  password   String   @db.VarChar(255)
  full_name  String?  @db.VarChar(255)
  gender     Gender?
  birthday   String?  @db.VarChar(10)
  role       Role
  is_enabled Boolean  @default(true) @db.Boolean
  created_at DateTime @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt() @db.Timestamptz(3)
  deleted_at DateTime? @db.Timestamptz(3)
  markets    Market[]

  @@map("users")
}

model UserSession {
  id            String   @id @unique @default(uuid())
  user_id       String
  refresh_token String   @unique @db.Text()
  expires_at    DateTime @db.Timestamptz(3)
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  updated_at    DateTime? @updatedAt() @db.Timestamptz(3)
  deleted_at    DateTime? @db.Timestamptz(3)

  @@index([user_id, deleted_at])
  @@map("user_sessions")
}

model Market {
  id          String   @id @unique @default(uuid())
  user_id     String
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz(3)
  updated_at  DateTime? @updatedAt() @db.Timestamptz(3)
  deleted_at  DateTime? @db.Timestamptz(3)

  products Product[]
  user     User      @relation(fields: [user_id], references: [id])

  @@index([user_id, deleted_at])
  @@map("markets")
}

model Category {
  id          String   @id @unique @default(uuid())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz(3)
  updated_at  DateTime? @updatedAt() @db.Timestamptz(3)
  deleted_at  DateTime? @db.Timestamptz(3)

  products Product[]

  @@map("categories")
}

model Product {
  id          String   @id @unique @default(uuid())
  market_id   String   @db.VarChar(255)
  category_id String   @db.VarChar(255)
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int      @db.Integer
  stock       Int      @db.Integer
  created_at  DateTime @default(now()) @db.Timestamptz(3)
  updated_at  DateTime? @updatedAt() @db.Timestamptz(3)
  deleted_at  DateTime? @db.Timestamptz(3)

  category Category @relation(fields: [category_id], references: [id])
  market   Market   @relation(fields: [market_id], references: [id])

  @@index([market_id, category_id, deleted_at])
  @@map("products")
}
